# Maintainer: Alexey Pavlov <Alexpux@gmail.com>
# Contributer: Zach Bacon <11doctorwhocanada@gmail.com>
# Contributer: wirx6 <wirx654@gmail.com>

_realname=ffmpeg
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=8.0
pkgrel=1
pkgdesc="Complete and free Internet live audio and video broadcasting solution (mingw-w64)"
arch=('any')
url="https://ffmpeg.org/"
license=('GPL')
options=('staticlibs' 'strip')
depends=("${MINGW_PACKAGE_PREFIX}-bzip2"
        "${MINGW_PACKAGE_PREFIX}-lame"
        "${MINGW_PACKAGE_PREFIX}-libvorbis"
        "${MINGW_PACKAGE_PREFIX}-libvpx"
        "${MINGW_PACKAGE_PREFIX}-x264"
        "${MINGW_PACKAGE_PREFIX}-xvidcore"
        "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-nasm")
source=(https://ffmpeg.org/releases/${_realname}-${pkgver}.tar.xz{,.asc}
        "0002-gcc-12.patch")
validpgpkeys=('FCF986EA15E6E293A5644F10B4322F04D67658D8')
sha256sums=('b2751fccb6cc4c77708113cd78b561059b6fa904b24162fa0be2d60273d27b8e'
            'SKIP'
            '84b9fcaa188eef15201a105a44c53d647e4fb800a5032336e0948d6bed2cbc1b')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -i "${srcdir}"/${_fname}
  done
}

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  apply_patch_with_msg 0002-gcc-12.patch
}

build() {

  for _variant in -static -shared; do
    [[ -d "${srcdir}/build-${MSYSTEM}${_variant}" ]] && rm -rf "${srcdir}/build-${MSYSTEM}${_variant}"
    mkdir -p "${srcdir}/build-${MSYSTEM}${_variant}" && cd "${srcdir}/build-${MSYSTEM}${_variant}"
    if [[ ${_variant} == -static ]]; then
      ENABLE_VARIANT="--enable-static --enable-hardcoded-tables --pkg-config-flags=--static"
      export CFLAGS="-UX264_API_IMPORTS" #x264.pc is weird
    else
      ENABLE_VARIANT=--enable-shared
      export CFLAGS=""
    fi
    ../${_realname}-${pkgver}/configure \
      --prefix=${MINGW_PREFIX} \
      --target-os=mingw32 \
      --arch=${CARCH%%-*} \
      --cc=${CC} \
      --cxx=${CXX} \
      --disable-debug \
      --enable-dxva2 \
      --enable-d3d11va \
      --enable-gpl \
      --enable-libmp3lame \
      --enable-libx264 \
      --enable-libxvid \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-version3 \
      --enable-zlib \
      --disable-lzma \
      --disable-doc \
      --extra-libs="$(${PKG_CONFIG:-pkg-config} --libs-only-l --static vorbis)" \
      --logfile=config.log \
      ${ENABLE_VARIANT}

    make
  done

}

package() {
  for _variant in -static -shared; do
    cd "${srcdir}/build-${MSYSTEM}${_variant}"
    make DESTDIR="${pkgdir}" install
  done

  rm -f ${pkgdir}/${MINGW_PREFIX}/lib/*.def
  rm -f ${pkgdir}/${MINGW_PREFIX}/bin/*.lib

  local PREFIX_DEPS=$(cygpath -am ${MINGW_PREFIX})
  find ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig -name *.pc -exec sed -i -e"s|${PREFIX_DEPS}|${MINGW_PREFIX}|g" {} \;
}
